#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <netinet/in.h>
#include <netinet/if_ether.h>
#include <arpa/inet.h>
#include <unistd.h>
#include <sys/socket.h>
#include <sys/ioctl.h>
#include <net/if_arp.h>
#include <net/if.h>

int main() {
    int sd;
    struct arpreq myarp = {0};
    struct sockaddr_in sin = {0};
    unsigned char *ptr;

    
    sd = socket(AF_INET, SOCK_DGRAM, 0);
    if (sd < 0) {
        perror("Socket creation failed");
        exit(EXIT_FAILURE);
    }

    sin.sin_family = AF_INET;
    printf("Enter IP address: ");
    char ip[20];
    scanf("%s", ip);

    if (inet_pton(AF_INET, ip, &sin.sin_addr) == 0) {
        printf("IP address Entered '%s' is not valid\n", ip);
        close(sd);
        exit(EXIT_FAILURE);
    }

    memcpy(&myarp.arp_pa, &sin, sizeof(myarp.arp_pa));
    strcpy(myarp.arp_dev, "eth0"); 
    printf("\nSending ARP request...\n");

    if (ioctl(sd, SIOCGARP, &myarp) == -1) {
        printf("No Entry in ARP cache for '%s'\n", ip);
        close(sd);
        exit(EXIT_FAILURE);
    }

    ptr = &myarp.arp_ha.sa_data[0];

    printf("Received ARP Reply\n");
    printf("\nMAC Address for '%s' : %02X:%02X:%02X:%02X:%02X:%02X\n",
           ip, ptr[0], ptr[1], ptr[2], ptr[3], ptr[4], ptr[5]);

    close(sd);
    return 0;
}
